Hi, this is the presentation for my final project. Fluid simulation is an interesting area of research and it has applications in many fields such as engineering and gaming. In this project, I simulated fluid based on weakly compressible smoothed particle hydrodynamics and calculated isosurface to reconstruct a simple surface. The simulation is based on a particle system, and here are the important formulas for updating position, velocity and density for each particle. The momentum formula adds gravity to particles and it also describes how the pressure affects the particles. The viscosity formula  makes the fluid more stable so that the fluid  does not explode. The surface tension formula pulls particles together. And the density formula reflects the pressure built inside the fluid. All the quantities in the particles systems are updated using the forward Euler method. I have also attempted to implement the surface reconstruction using anisotropic kernel, but I have not finished debugging it yet due to time constraint. So I end up using isotropic kernel to get the isosurface, and use marching cubes in libigl for surface reconstruction.


My implementation for weakly compressible SPH is mainly based on the paper Weakly Compressible SPH for Free Surface Flows  by Markus Becker, and my implementation for getting the isosurface of surface reconstruction is based on the paper Reconstructing Surfaces of Particle-Based Fluids Using Anisotropic Kernels  by Jihun Yu. In my initial implementation of SPH in 2 dimensions, I use Taichi, a programming language embedded in python.  Later, I switched to C++ for 3 dimensions implementation, and I use Eigen for vector and matrix calculation, Libigl for displaying and visualizing the particles and reconstructing the surface. I also use tbb to make my program run in parallel.